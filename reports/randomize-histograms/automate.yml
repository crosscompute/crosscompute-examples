---
# version of crosscompute
crosscompute: 0.9.1

# name of your automation
name: Randomize Histograms

# version of your automation
version: 0.0.2

# input configuration
input:

  # input variables
  # - id to use when referencing your variable in the template
  # - view to use when rendering your variable on the display
  # - path where your script loads the variable,
  #   relative to the input folder
  variables:
    - id: mean
      view: number
      path: variables.dictionary
    - id: variance
      view: number
      path: variables.dictionary
    - id: value_count
      view: number
      path: variables.dictionary
    - id: bin_count
      view: number
      path: variables.dictionary

# output configuration
output:

  # output variables
  # - id to use when referencing your variable in the template
  # - view to use when rendering your variable on the display
  # - path where your script saves the variable,
  #   relative to the output folder
  variables:
    - id: histogram-1d
      view: image
      path: histogram-1d.png
    - id: histogram-2d
      view: image
      path: histogram-2d.png

  # output templates
  # - path to your markdown template or jupyter notebook form
  templates:
    - path: report.md

# tests configuration
# - folder that contains an input subfolder with paths for
#   input variables that define a specific test
tests:
  - folder: tests/standard

# batches configuration
# - folder that contains an input subfolder with paths for
#   input variables that define a specific batch
batches:

  # case 0: use a batch folder to set values for input variables
  - folder: batches/a

  # case 1: use a batch configuration to vary values for input variables
  - folder: batches/case1/me{mean}-va{variance}-vc{value_count}-bc{bin_count}
    configuration:
      path: datasets/batches.csv

  # case 2: use code to vary values for input variables
  - folder: batches/case2/me{mean}-va{variance}-vc{value_count}-bc{bin_count}
    variables:
      - id: mean
        code: '[0, 10]'
      - id: variance
        code: 'range(1, 3)'
      - id: value_count
        code: "__import__('numpy').linspace(10, 10000, num=5)"
      - id: bin_count
        code: "__import__('numpy').logspace(1, 3, num=3)"

  # case 3: use a reference folder to set default values
  #         use code to vary selected variables
  - folder: batches/case3/me{mean}-va{variance}-vc{value_count}-bc{bin_count}
    reference:
      folder: batches/a
    variables:
      - id: variance
        code: "__import__('numpy').arange(0, 5, num=0.5)"

  # case 4: use a reference folder to set default values
  #         use a batch configuration to vary selected variables
  - folder: batches/case4/me{mean}-va{variance}-vc{value_count}-bc{bin_count}
    reference:
      folder: batches/a
    configuration:
      path: datasets/batches-vc-bc.csv

  # case 5: use a reference folder to set default values
  #         use code to vary selected variables
  #         use a batch configuration to vary selected variables
  - folder: batches/case5/me{mean}-va{variance}-vc{value_count}-bc{bin_count}
    reference:
      folder: batches/a
    variables:
      - id: mean
        code: "[-1, 0, 1]"
      - id: variance
        code: "__import__('numpy').arange(0, 5, num=0.5)"
    configuration:
      path: datasets/batches-vc-bc.csv

# script configuration
script:

  # folder where your script should run
  folder: .

  # command to use to run your script
  command: python -c "$(jupyter nbconvert run.ipynb --to script --stdout)"

# display configuration
display:

  # styles configuration
  # - uri to CSS stylesheet that will be used to render your templates
  # - path to CSS stylesheet that will be used to render your templates
  styles:
    - path: report.css
